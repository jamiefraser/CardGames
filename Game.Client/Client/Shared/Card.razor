@if (OpponentsCard)
{
    <li class="card back">
        *
    </li>
}
else
{
<li>
    @if (!Selected)
    {
        <a class="card rank-@TheCard.Rank @TheCard.Suit"  @onclick="Clicked">
        <span class="rank">
            @if (DeckType.Equals(Entities.DeckType.Phase10))
            {
                @switch (TheCard.Suit.ToLower())
                {
                    case "wild":
                        {
                            @Wild
                            break;
                        }
                    case "skip":
                        {
                            @Skip
                            break;
                        }
                    default:
                        {
                            @TheCard.Rank;
                            break;
                        }
                }
            }
            else
            {
                switch (TheCard.Rank.All(Char.IsDigit))
                {
                    case true:
                        {
                            <span class="rank">
                                @TheCard.Rank
                            </span>
                            break;
                        }
                    case false:
                        {
                            <span class="rank">
                                @TheCard.Rank
                            </span>
                            <span class="suit">
                                switch(TheCard.Suit.ToLower())
                                {
                                    case "spades":
                                    {
                                        <div>
                                            &spades;
                                        </div>
                                        break;
                                    }
                                    case "clubs":
                                    {
                                        <div>
                                            &clubs;
                                        </div>
                                        break;
                                    }
                                    case "diams":
                                    {
                                        <div>
                                            &diams;
                                        </div>
                                        break;
                                    }
                                    case "hearts":
                                    {
                                        <div>
                                            &hearts;
                                        </div>
                                        break;
                                    }
                                }
                            </span>
                            break;
                        }
                }
            }
        </span>
        @*This snippet below shows how to add the suit to the top left corner conditionally.  Helpful for, say, face cards*@
        @*<span class="suit">
                @switch (c.Suit.ToLower())
                {
                case "spades":
                {
                <div>
                    &spades;
                </div>
                break;
                    }
                    default:
                {
                <div>
                    &nbsp;
                </div>
                break;
                    }
                }
            </span>*@
    </a>
    }
    else
    {
        <strong>
            <a class="card rank-@TheCard.Rank @TheCard.Suit" @onclick="Clicked" >
                <span class="rank">
                    @switch (TheCard.Suit.ToLower())
                    {
                        case "wild":
                            {
                                @Wild
                                break;
                            }
                        case "skip":
                            {
                                @Skip
                                break;
                            }
                        default:
                            {
                            @TheCard.Rank;
                                break;
                            }
                    }
                </span>
            </a>
        </strong>
    }
    </li>
}

@code { 
    [Parameter]
    public Entities.Card TheCard { get; set; }
    [Parameter]
    public Action<Entities.Card> OnClicked { get; set; }
    [Parameter]
    public string Suit { get; set; }
    [Parameter]
    public string Rank { get; set; }
    [Parameter]
    public Entities.DeckType DeckType { get; set; }
    [Parameter]
    public bool OpponentsCard { get; set; }
    public bool Selected { get; set; }
    protected void Clicked (MouseEventArgs args)
    {
        Selected = !Selected;
        TheCard.Selected = Selected;
        Console.WriteLine($"A card was clicked! Suit:{this.TheCard.Suit} Rank:{this.TheCard.Rank} Selected: {this.TheCard.Selected}");
        if(this.OnClicked != null)
        {
            Console.WriteLine($"TheCard {(TheCard == null ? "is" : "is not")} null!");
            this.OnClicked(TheCard);
        }
    }
    public string Wild = "Wild";
    public string Skip = "Skip";
}
